// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id             String       @id @default(cuid())
    name           String?
    email          String?      @unique
    emailVerified  DateTime?
    image          String?
    accounts       Account[]
    sessions       Session[]
    organizationId String
    organization   Organization @relation(fields: [organizationId], references: [id])

    @@index([organizationId], name: "organization")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Bug {
    id                String       @id @default(cuid())
    description       String       @db.Text
    productAreaId     String
    ProductArea       ProductArea  @relation(fields: [productAreaId], references: [id])
    createdAt         DateTime     @default(now())
    updatedAt         DateTime     @updatedAt
    deletedAt         DateTime
    status            String?
    numReports        Int          @default(0)
    numViews          Int          @default(0)
    stepsToReproduce  String?      @db.Text
    expectedBehaviour String?      @db.Text
    actualBehaviour   String?      @db.Text
    urlSlug           String
    organizationId    String
    organization      Organization @relation(fields: [organizationId], references: [id])

    @@index([organizationId], name: "organization")
    @@index([productAreaId], name: "productArea")
}

model Organization {
    id        String   @id @default(cuid())
    name      String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    deletedAt DateTime
    User      User[]
    Bug       Bug[]
}

model ProductArea {
    id        String   @id @default(cuid())
    name      String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    deletedAt DateTime
    Bug       Bug[]
}
